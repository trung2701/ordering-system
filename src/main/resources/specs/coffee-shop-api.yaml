openapi: 3.0.0
info:
  title: Coffee Shop API
  description: API to find shops by their unique ID
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Local development server
  - url: https://api.example.com/api/v1
    description: Production server
paths:
  /shop/{id}:
    get:
      summary: Find a Coffee Shop by ID
      description: Returns details of a specific Shop by its ID.
      operationId: getShopById
      tags:
        - Coffee Shop
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the Shop (UUID)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A successful response, returning the Shop details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoffeeShop'
        '404':
          description: Shop not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Shop not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An unexpected error occurred"
components:
  schemas:
    CoffeeShop:
      type: object
      properties:
        shopId:
          type: string
          format: uuid
          description: The unique identifier of the Shop
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        products:
          type: array
          description: List of products available in the Shop
          items:
            $ref: '#/components/schemas/Product'
        active:
          type: boolean
          description: Indicates whether the Shop is active
          example: true

    Product:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          description: The unique identifier of the product
          example: "f7a3a62e-c07f-4ff2-9230-51d6e8bb9f74"
        name:
          type: string
          description: Name of the product
          example: "Pizza Margherita"
        price:
          type: number
          format: double
          description: Price of the product
          example: 12.99
